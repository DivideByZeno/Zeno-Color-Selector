<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:local="clr-namespace:ColorSelector"
                    xmlns:system="clr-namespace:System;assembly=netstandard">

    <BooleanToVisibilityConverter x:Key="b2v" />

    <SolidColorBrush x:Key="toggleButtonCheckedBrush"
                     Color="#0761A6"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Static.Background1"
                     Color="#0984e3"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Static.Border1"
                     Color="#34495e"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.MouseOver.Background1"
                     Color="#74b9ff"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.MouseOver.Border1"
                     Color="#FF3C7FB1"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Pressed.Background1"
                     Color="#487eb0"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Pressed.Border1"
                     Color="#FF2C628B"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Disabled.Background1"
                     Color="#888"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Disabled.Border1"
                     Color="#FFADB2B5"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground1"
                     Color="#eee"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="whiteColorBrush"
                     Color="white"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="dropDownArrowBorderFillBrush"
                     Color="#33000000"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="redColorBrush"
                     Color="#DE2F1B"
                     PresentationOptions:Freeze="true" />
    <SolidColorBrush x:Key="greenColorBrush"
                     Color="#10A882" 
                     PresentationOptions:Freeze="true"/>
    <SolidColorBrush x:Key="blackColorBrush"
                     Color="Black"
                     PresentationOptions:Freeze="true" />

    <DrawingBrush x:Key="warningBrush"
                  Stretch="UniformToFill"
                  PresentationOptions:Freeze="True"
                  TileMode="FlipX"
                  AlignmentX="Center"
                  ViewportUnits="RelativeToBoundingBox"
                  Viewport="0,0,.15,.15">
        <DrawingBrush.Transform>
            <RotateTransform Angle="45"
                             PresentationOptions:Freeze="True" />
        </DrawingBrush.Transform>
        <DrawingBrush.Drawing>
            <DrawingGroup PresentationOptions:Freeze="True">
                <GeometryDrawing PresentationOptions:Freeze="True">
                    <GeometryDrawing.Pen>
                        <Pen Brush="#88333333"
                             Thickness="1"
                             PresentationOptions:Freeze="True" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="0,0"
                                      EndPoint="0,1" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing PresentationOptions:Freeze="True">
                    <GeometryDrawing.Pen>
                        <Pen Brush="#88B8860B"
                             Thickness="1"
                             PresentationOptions:Freeze="True" />
                    </GeometryDrawing.Pen>
                    <GeometryDrawing.Geometry>
                        <LineGeometry StartPoint="1,0"
                                      EndPoint="1,1" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>

        </DrawingBrush.Drawing>
    </DrawingBrush>

    <local:HslComponentToAbbreviatedStringConverter x:Key="hslComponentToAbbreviatedStringConverter" />

    <Style x:Key="gridItemContrast" TargetType="{x:Type Border}">
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Background" Value="#08ffffff"/>
    </Style>

    <DrawingBrush x:Key="checkeredBrush"
                  Stretch="UniformToFill"
                  TileMode="FlipY"
                  PresentationOptions:Freeze="True"
                  ViewportUnits="Absolute"
                  Viewport="0,4,16,8"
                  AlignmentX="Left">
        <DrawingBrush.Drawing>
            <GeometryDrawing Brush="Gray"
                             PresentationOptions:Freeze="True">
                <GeometryDrawing.Geometry>
                    <PathGeometry FillRule="Nonzero"
                                  PresentationOptions:Freeze="True">
                        <PathFigure StartPoint="1,1"
                                    IsClosed="True"
                                    IsFilled="True">
                            <LineSegment Point="0,1" />
                            <LineSegment Point="0,0" />
                            <LineSegment Point="1,0" />
                            <LineSegment Point="1,2" />
                            <LineSegment Point="2,2" />
                            <LineSegment Point="2,1" />
                        </PathFigure>
                    </PathGeometry>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <FontFamily x:Key="mainFontFamily">Segoe Ui</FontFamily>

    <Style TargetType="{x:Type Border}"
           x:Key="HelpIcon">
        <Setter Property="Width"
                Value="24" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="CornerRadius"
                Value="0,4,0,4" />
        <Setter Property="Background"
                Value="#999" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Cursor"
                Value="Help" />
        <Setter Property="Margin"
                Value="8,0,0,0" />
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextAlignment"
                        Value="Center" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="FontSize"
                        Value="13" />
                <Setter Property="FontFamily"
                        Value="Arial" />
                <Setter Property="FontWeight"
                        Value="Bold" />
                <Setter Property="Foreground"
                        Value="{StaticResource whiteColorBrush}" />
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate x:Key="textBoxErrorTemplateAdornRight">
        <DockPanel>
            <AdornedElementPlaceholder Margin="0,0,0,0" />
            <Border Width="24"
                    BorderThickness="0"
                    CornerRadius="0"
                    Background="{StaticResource redColorBrush}"
                    Margin="8,0,0,0"
                    ToolTip="{Binding [0].ErrorContent}"
                    Style="{StaticResource HelpIcon}">
                <TextBlock Foreground="{StaticResource whiteColorBrush}"
                           FontSize="20"
                           Text="!" />
            </Border>
        </DockPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="textBoxErrorTemplateAdornLeft">
        <DockPanel>
            <Border Width="24"
                    BorderThickness="0"
                    CornerRadius="0"
                    Background="{StaticResource redColorBrush}"
                    Margin="0,0,8,0"
                    ToolTip="{Binding [0].ErrorContent}"
                    Style="{StaticResource HelpIcon}">
                <TextBlock Foreground="{StaticResource whiteColorBrush}"
                           FontSize="20"
                           Text="!" />
            </Border>
            <AdornedElementPlaceholder Margin="0,0,0,0" />
        </DockPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="MenuText">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorSelector}, Mode=FindAncestor}, Path=Foreground, Mode=OneWay}" />
            <Setter Property="FontFamily"
                    Value="{StaticResource mainFontFamily}" />
            <Setter Property="FontWeight"
                    Value="Normal" />
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource MenuText}"
           x:Key="MenuSectionHeader">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Margin"
                    Value="8,4" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineHeight" Value="20"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource MenuSectionHeader}"
           x:Key="MenuSectionHeaderExpanderText">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="20" />
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type Run}"
           x:Key="MenuSectionHeaderRun">
        <Style.Setters>
            <Setter Property="Foreground"
                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ColorSelector}, Mode=FindAncestor}, Path=Foreground, Mode=OneWay}" />
            <Setter Property="FontFamily"
                    Value="{StaticResource mainFontFamily}" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="BaselineAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource MenuText}"
           x:Key="SettingLabelText">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="LineHeight"
                Value="16" />
        <Setter Property="LineStackingStrategy"
                Value="BlockLineHeight" />
        <Setter Property="Foreground"
                Value="#ddd" />
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource MenuText}"
           x:Key="buttonText">
        <Style.Setters>
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="#ccc" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource buttonText}"
           x:Key="buttonTextIcon">
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="24" />
        <Setter Property="TextAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource buttonText}"
           x:Key="monospacedBoldText">
        <Setter Property="Margin"
                Value="8,0,8,0" />
        <Setter Property="FontFamily"
                Value="Consolas" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
    </Style>

    <Style TargetType="{x:Type Border}"
           x:Key="buttonIconBorder">
        <Setter Property="Width"
                Value="32" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="CornerRadius"
                Value="4,0,0,4" />
        <Setter Property="Background"
                Value="{StaticResource dropDownArrowBorderFillBrush}" />
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource buttonTextIcon}" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type DockPanel}"
           x:Key="buttonWithIconAndTextDockPanel">
        <Style.Resources>

            <Style TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource buttonText}">
                <Setter Property="Margin"
                        Value="8,0" />
            </Style>
            <Style TargetType="{x:Type Border}"
                   BasedOn="{StaticResource buttonIconBorder}" />
        </Style.Resources>
    </Style>

    <Style x:Key="FocusVisual1">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Rectangle SnapsToDevicePixels="true"
                                   StrokeThickness="1"
                                   Stroke="Black"
                                   StrokeDashArray="2 2" />
                        <Rectangle SnapsToDevicePixels="true"
                                   StrokeThickness="1"
                                   Stroke="White"
                                   StrokeDashOffset="2"
                                   StrokeDashArray="2 2">
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type ButtonBase}"
                     x:Key="buttonBaseControlTemplate">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding Tag}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted"
                     Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Button.MouseOver.Background1}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.MouseOver.Border1}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Button.Pressed.Background1}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.Pressed.Border1}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Button.Disabled.Background1}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Button.Disabled.Border1}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseButtonStyle"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual1}" />
        <Setter Property="Background"
                Value="{StaticResource Button.Static.Background1}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Button.Static.Border1}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation"
                Value="None" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template"
                Value="{StaticResource buttonBaseControlTemplate}" />
    </Style>

    <Style x:Key="ButtonStyle1"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseButtonStyle}">
    </Style>

    <Style x:Key="RegularToggleButtonStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Border1}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource toggleButtonCheckedBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                                <Condition Property="IsChecked"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Border1}" />
                        </MultiTrigger>

                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Border1}" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Border1}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground1}" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuSettingToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="#7f8c8d" />
        <Setter Property="BorderBrush"
                Value="#2c3e50" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Width"
                Value="56" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="12"
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard PresentationOptions:Freeze="True">
                                        <!--<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"
                                                        To="#10A882"
                                                        Duration="0:0:0.3">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>-->
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                            Storyboard.TargetName="ellipse"
                                                            To="33,3,3,3"
                                                            Duration="0:0:0.3">
                                            <ThicknessAnimation.EasingFunction>
                                                <CubicEase />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard PresentationOptions:Freeze="True">
                                        <!--<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="border"
                                                        To="#666"
                                                        Duration="0:0:0.3">
                                            <ColorAnimation.EasingFunction>
                                                <CubicEase />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>-->
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                            Storyboard.TargetName="ellipse"
                                                            To="4,3,3,3"
                                                            Duration="0:0:0.3">
                                            <ThicknessAnimation.EasingFunction>
                                                <CubicEase />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Width="{Binding ElementName=border, Path=ActualWidth, Mode=OneWay}">
                            <ContentPresenter Visibility="Collapsed"
                                              x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Ellipse x:Name="ellipse"
                                     Margin="3"
                                     Fill="Snow"
                                     Width="18"
                                     Height="18"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Border1}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Border1}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#10A882" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                 Value="true"/>
                                <Condition Property="IsChecked"
                                 Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#94DFA4" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF3CB151" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                 Value="true"/>
                                <Condition Property="IsChecked"
                                 Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#267B08" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF2C8B34" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Border1}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground1}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent1"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="SliderThumb.Static.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Static.Border"
                     Color="#FFACACAC" />
    <SolidColorBrush x:Key="SliderThumb.Static.Foreground"
                     Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background"
                     Color="#FFDCECFC" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border"
                     Color="#FF7Eb4EA" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background"
                     Color="#FFDAECFC" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border"
                     Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="SliderThumb.Track.Background"
                     Color="#FFE7EAEA" />
    <SolidColorBrush x:Key="SliderThumb.Track.Border"
                     Color="#FFD6D6D6" />
    <ControlTemplate x:Key="SliderThumbHorizontalDefault"
                     TargetType="{x:Type Thumb}">
        <Border x:Name="grip"
                Background="Transparent"
                BorderBrush="{StaticResource whiteColorBrush}"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                Cursor="Hand"
                UseLayoutRounding="True"
                VerticalAlignment="Stretch">
            <Border x:Name="innerGrip"
                    BorderBrush="{StaticResource blackColorBrush}"
                    BorderThickness="1" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Background"
                        TargetName="grip"
                        Value="Transparent" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Background"
                        TargetName="grip"
                        Value="Transparent" />
                <Setter Property="CornerRadius"
                        TargetName="grip"
                        Value="4" />
                <Setter Property="CornerRadius"
                        TargetName="innerGrip"
                        Value="4" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalTop"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  StrokeThickness="1"
                  UseLayoutRounding="True"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalBottom"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  StrokeThickness="1"
                  UseLayoutRounding="True"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"
                                   MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
                         Fill="{TemplateBinding Foreground}"
                         Height="4"
                         Margin="0,0,0,2"
                         Placement="Top"
                         Grid.Row="0"
                         Visibility="Collapsed" />
                <TickBar x:Name="BottomTick"
                         Fill="{TemplateBinding Foreground}"
                         Height="4"
                         Margin="0,2,0,0"
                         Placement="Bottom"
                         Grid.Row="2"
                         Visibility="Collapsed" />
                <Border x:Name="TrackBackground"
                        BorderThickness="0"
                        BorderBrush="{StaticResource whiteColorBrush}"
                        Margin="0"
                        Grid.Row="1"
                        VerticalAlignment="Stretch">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange"
                                   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                   Height="4.0"
                                   Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Border Background="{TemplateBinding Background}"
                        Grid.Row="1" Margin="5,0"/>
                <Track x:Name="PART_Track"
                       Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent1}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent1}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Margin="0,0,0,0"
                               Focusable="False"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbHorizontalDefault}"
                               VerticalAlignment="Stretch"
                               Width="10" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbHorizontalTop}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbHorizontalBottom}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="PART_SelectionRange"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Foreground"
                        TargetName="Thumb"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault"
                     TargetType="{x:Type Thumb}">
        <!--<Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  Stretch="Fill" />
        </Grid>-->
        <Border x:Name="grip"
                Cursor="Hand"
                Background="Transparent"
                BorderBrush="{StaticResource whiteColorBrush}"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                UseLayoutRounding="True"
                HorizontalAlignment="Stretch">
            <Border x:Name="innerGrip"
                    BorderBrush="{StaticResource blackColorBrush}"
                    BorderThickness="1" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Background"
                        TargetName="grip"
                        Value="Transparent" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Background"
                        TargetName="grip"
                        Value="Transparent" />
                <Setter Property="CornerRadius"
                        TargetName="grip"
                        Value="4" />
                <Setter Property="CornerRadius"
                        TargetName="innerGrip"
                        Value="4" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="BorderBrush"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalLeft"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  Stretch="Fill" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalRight"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  Stretch="Fill" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderVertical"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}"
                                      Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
                         Grid.Column="0"
                         Fill="{TemplateBinding Foreground}"
                         Margin="0,0,2,0"
                         Placement="Left"
                         Visibility="Collapsed"
                         Width="4" />
                <TickBar x:Name="BottomTick"
                         Grid.Column="2"
                         Fill="{TemplateBinding Foreground}"
                         Margin="2,0,0,0"
                         Placement="Right"
                         Visibility="Collapsed"
                         Width="4" />
                <Border x:Name="TrackBackground"
                        Background="{StaticResource SliderThumb.Track.Background}"
                        BorderBrush="{StaticResource SliderThumb.Track.Border}"
                        BorderThickness="0"
                        Grid.Column="1"
                        HorizontalAlignment="center"
                        Margin="0"
                        Width="0">
                    <Canvas Margin="-1,-6">
                        <Rectangle x:Name="PART_SelectionRange"
                                   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                   Visibility="Hidden"
                                   Width="4.0" />
                    </Canvas>
                </Border>
                <Border Background="{TemplateBinding Background}"
                        Grid.Column="1" Margin="0,5"/>
                <Track x:Name="PART_Track"
                       Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent1}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent1}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Focusable="False"
                               Width="Auto"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbVerticalDefault}"
                               HorizontalAlignment="Stretch"
                               Height="10" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbVerticalLeft}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="2,5,0,5" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbVerticalRight}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="0,5,2,5" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="PART_SelectionRange"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Foreground"
                        TargetName="Thumb"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SliderStyle1"
           TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{StaticResource SliderThumb.Static.Foreground}" />
        <Setter Property="Template"
                Value="{StaticResource SliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template"
                        Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColorSelectorButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual1}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Width"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation"
                Value="None" />
        <Setter Property="Tag">
            <Setter.Value>
                <CornerRadius>4</CornerRadius>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding Tag}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <!--<Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.MouseOver.Background1}" />-->
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource whiteColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <!--<Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.Pressed.Background1}" />-->
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource blackColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Border1}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground1}" />
                            <Setter Property="TextBlock.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground1}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorSelectorListItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Polygon Visibility="Collapsed" x:Name="activeSelectionIndicator" StrokeThickness="1" Stroke="Black" Fill="White">
                                <Polygon.Points>
                                    <Point>0,0</Point>
                                    <Point>8,0</Point>
                                    <Point>0,8</Point>
                                </Polygon.Points>
                            </Polygon>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Black" />
                            <Setter Property="Visibility"
                                    TargetName="activeSelectionIndicator"
                                    Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="Black" />
                            <Setter Property="Visibility"
                                    TargetName="activeSelectionIndicator"
                                    Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorListItemDataTemplate" DataType="{x:Type Color}">
        <Border BorderThickness="0"
                Margin="0"
                Width="Auto"
                x:Name="colorBorder"
                Height="24">
            <Border.ToolTip>
                <TextBlock Text="{Binding Mode=OneWay}" Foreground="Black" Margin="8,0" FontWeight="DemiBold" FontSize="15" FontFamily="Consolas" />
            </Border.ToolTip>
            <Border.Resources>
                <SolidColorBrush x:Key="BackgroundBrush" Color="{Binding Mode=OneWay}" />
            </Border.Resources>
            <Border.Background>
                <StaticResource ResourceKey="BackgroundBrush" />
            </Border.Background>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ColorListItemDataTemplateAnimated" DataType="{x:Type Color}">
        <Border BorderThickness="0"
                Margin="0"
                Width="Auto"
                x:Name="colorBorder"
                MinHeight="24"
                MinWidth="24">
            <Border.ToolTip>
                <TextBlock Text="{Binding Mode=OneWay}" Foreground="Black" Margin="8,0" FontWeight="DemiBold" FontSize="15" FontFamily="Consolas" />
            </Border.ToolTip>
            <Border.Resources>
                <SolidColorBrush x:Key="BackgroundBrush" Color="{Binding Mode=OneWay}" />
            </Border.Resources>
            <Border.Background>
                <StaticResource ResourceKey="BackgroundBrush" />
            </Border.Background>
            <Border.LayoutTransform>
                <ScaleTransform ScaleX="1" ScaleY="0" />
            </Border.LayoutTransform>
        </Border>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="colorBorder" Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <SineEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" From="0" To="1" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <SineEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="ColorListItemPanelTemplate">
        <UniformGrid Columns="5" />
    </ItemsPanelTemplate>

    <Style x:Key="TabItemStyle1"
           TargetType="{x:Type TabItem}">
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource monospacedBoldText}" />
        </Style.Resources>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual1}" />
        <Setter Property="Foreground"
                Value="{StaticResource whiteColorBrush}" />
        <Setter Property="Background"
                Value="{StaticResource Button.Static.Background1}" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="0,4" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation"
                Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="templateRoot"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentSource="Header"
                                          Focusable="False"
                                          HorizontalAlignment="Stretch"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Stretch" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource Button.MouseOver.Background1}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource Button.MouseOver.Border1}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource toggleButtonCheckedBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource toggleButtonCheckedBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="{StaticResource toggleButtonCheckedBrush}" />
                            <Setter Property="BorderBrush"
                                    TargetName="templateRoot"
                                    Value="{StaticResource toggleButtonCheckedBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="templateRoot"
                                    Value="#333333" />
                            <Setter Property="Background"
                                    TargetName="templateRoot"
                                    Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TabItem.Selected.Background"
                     Color="#FFFFFF"
                     PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="TabItem.Selected.Border"
                     Color="#ACACAC"
                     PresentationOptions:Freeze="True" />
    <Style x:Key="TabControlStyle1"
           TargetType="{x:Type TabControl}">
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="{StaticResource TabItem.Selected.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TabItem.Selected.Border}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot"
                          ClipToBounds="true"
                          SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <UniformGrid x:Name="headerPanel"
                                     Background="Transparent"
                                     Grid.Column="0"
                                     IsItemsHost="true"
                                     Margin="0"
                                     Grid.Row="0"
                                     Rows="1"
                                     Columns="{Binding RelativeSource={RelativeSource Self}, Path=Children.Count, Mode=OneWay}"
                                     KeyboardNavigation.TabIndex="1"
                                     Panel.ZIndex="1">
                        </UniformGrid>
                        <Border x:Name="contentPanel"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="0"
                                CornerRadius="0,0,4,4"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1"
                                Visibility="Collapsed"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter Property="Grid.Row"
                                    TargetName="headerPanel"
                                    Value="1" />
                            <Setter Property="Grid.Row"
                                    TargetName="contentPanel"
                                    Value="0" />
                            <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                            <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="Auto" />
                            <Setter Property="Margin"
                                    TargetName="headerPanel"
                                    Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter Property="Grid.Row"
                                    TargetName="headerPanel"
                                    Value="0" />
                            <Setter Property="Rows"
                                    TargetName="headerPanel"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Children.Count, Mode=OneWay}" />
                            <Setter Property="Columns"
                                    TargetName="headerPanel"
                                    Value="1" />
                            <Setter Property="Grid.Row"
                                    TargetName="contentPanel"
                                    Value="0" />
                            <Setter Property="Grid.Column"
                                    TargetName="headerPanel"
                                    Value="0" />
                            <Setter Property="Grid.Column"
                                    TargetName="contentPanel"
                                    Value="1" />
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="Auto" />
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="*" />
                            <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                            <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0" />
                            <Setter Property="Margin"
                                    TargetName="headerPanel"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter Property="Grid.Row"
                                    TargetName="headerPanel"
                                    Value="0" />
                            <Setter Property="Rows"
                                    TargetName="headerPanel"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=Children.Count, Mode=OneWay}" />
                            <Setter Property="Columns"
                                    TargetName="headerPanel"
                                    Value="1" />
                            <Setter Property="Grid.Row"
                                    TargetName="contentPanel"
                                    Value="0" />
                            <Setter Property="Grid.Column"
                                    TargetName="headerPanel"
                                    Value="1" />
                            <Setter Property="Grid.Column"
                                    TargetName="contentPanel"
                                    Value="0" />
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="*" />
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="Auto" />
                            <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*" />
                            <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0" />
                            <Setter Property="Margin"
                                    TargetName="headerPanel"
                                    Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="templateRoot"
                                    Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="menuItemGrid">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="ExpanderStyle1"
           TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Margin" Value="0,8,0,0"/>
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FontSize="{TemplateBinding FontSize}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="0"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Height="Auto"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Style="{StaticResource RegularToggleButtonStyle}"
                                          Background="{StaticResource Button.Static.Background1}"
                                          BorderThickness="0"
                                          Command="{TemplateBinding Tag}"
                                          IsTabStop="False"
                                          Focusable="False">
                                <ToggleButton.Tag>
                                    <CornerRadius>4</CornerRadius>
                                </ToggleButton.Tag>
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpandSite"
                                              DockPanel.Dock="Bottom"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="0"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(ContentPresenter.Opacity)" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)" To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(ContentPresenter.Opacity)" To="0" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <!--<Setter Property="Visibility"
                                    TargetName="ExpandSite"
                                    Value="Visible" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style TargetType="{x:Type local:ColorSelector}">
        <Setter Property="Background"
                Value="#2c3e50" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorSelector}">
                    <Grid>
                        <Grid.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ApplicationScale, Mode=OneWay}" ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ApplicationScale, Mode=OneWay}" />
                        </Grid.LayoutTransform>
                        <Grid Background="{TemplateBinding Background}" x:Name="mainInterface">
                            <Grid.Resources>
                                <Style TargetType="{x:Type TextBlock}"
                                       BasedOn="{StaticResource monospacedBoldText}" />
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <WrapPanel Background="#18ffffff">
                                <Button x:Name="PART_menuOpenButton" Style="{StaticResource ButtonStyle1}" Height="26" Width="41" ToolTip="Open Menu">
                                    <TextBlock Style="{StaticResource buttonText}" Text="≡" Foreground="White" FontSize="24" 
                                               FontWeight="Normal" LineHeight="24" LineStackingStrategy="BlockLineHeight"/>
                                </Button>
                                <TextBlock Text="Zeno Color Selector"
                                           HorizontalAlignment="Center"
                                           Margin="8,0,8,0"
                                           Style="{StaticResource MenuSectionHeader}"
                                           Foreground="{TemplateBinding Foreground}" />
                                <TabControl x:Name="PART_colorModelSelector"
                                            Style="{StaticResource TabControlStyle1}"
                                            Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorModelsVisible, Mode=OneWay, Converter={StaticResource b2v}}"
                                            ItemContainerStyle="{StaticResource TabItemStyle1}">
                                    <TabControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type local:ColorModel}">
                                            <TextBlock Style="{StaticResource monospacedBoldText}"
                                                       Text="{Binding Mode=OneWay}" />
                                        </DataTemplate>
                                    </TabControl.ItemTemplate>
                                </TabControl>
                            </WrapPanel>

                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Grid.Row="1">
                                <StackPanel>
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type Slider}"
                                   BasedOn="{StaticResource SliderStyle1}">
                                            <Setter Property="Minimum"
                                        Value="0" />
                                            <Setter Property="Maximum"
                                        Value="255" />
                                            <Setter Property="TickFrequency"
                                        Value="1" />
                                            <Setter Property="Delay"
                                        Value="0" />
                                            <Setter Property="IsMoveToPointEnabled"
                                        Value="False" />
                                            <Setter Property="Interval"
                                        Value="1" />
                                            <Setter Property="IsSnapToTickEnabled"
                                        Value="True" />
                                            <Setter Property="Margin"
                                        Value="0,4,8,4" />
                                            <Setter Property="Height"
                                        Value="24" />
                                            <Setter Property="BorderThickness"
                                        Value="0" />
                                            <Setter Property="FocusVisualStyle"
                                        Value="{StaticResource FocusVisual1}" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <ListBox x:Name="PART_presetColorsSelector"
                                         ItemsSource="{Binding Path=PresetColors, Mode=OneWay}"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                         Padding="0"
                                         BorderThickness="0"
                                         KeyboardNavigation.TabNavigation="Continue"
                                         Margin="4,8,4,0"
                                         HorizontalAlignment="Stretch"
                                         HorizontalContentAlignment="Stretch"
                                         Background="Transparent"
                                         IsTabStop="False"
                                         ItemTemplate="{StaticResource ColorListItemDataTemplateAnimated}"
                                         ItemContainerStyle="{StaticResource ColorSelectorListItemStyle}"
                                         ItemsPanel="{StaticResource ColorListItemPanelTemplate}"
                                             Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=PresetColorsVisible, Mode=OneWay, Converter={StaticResource b2v}}"/>

                                    <Grid Margin="8,8,8,0" 
                                          Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=Display2dVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TabControl x:Name="PART_hslComponentSelector"
                                        TabStripPlacement="Left"
                                        Style="{StaticResource TabControlStyle1}"
                                        ItemContainerStyle="{StaticResource TabItemStyle1}">
                                            <TabControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type local:HslComponent}">
                                                    <TextBlock Style="{StaticResource monospacedBoldText}" Text="{Binding Converter={StaticResource hslComponentToAbbreviatedStringConverter}, Mode=OneWay}" />
                                                </DataTemplate>
                                            </TabControl.ItemTemplate>
                                        </TabControl>

                                        <Slider Grid.Column="1"
                                    Width="24"
                                    x:Name="PART_hslRangeBase"
                                    Background="Black"
                                    Orientation="Vertical"
                                    Height="Auto"
                                    Margin="8,0">
                                            <Slider.Style>
                                                <Style TargetType="{x:Type Slider}"
                                           BasedOn="{StaticResource {x:Type Slider}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslComponentSelection}"
                                                         Value="{x:Static local:HslComponent.Hue}">
                                                            <Setter Property="TickFrequency"
                                                        Value="1" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslComponentSelection}"
                                                         Value="{x:Static local:HslComponent.Saturation}">
                                                            <Setter Property="TickFrequency"
                                                        Value=".01" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslComponentSelection}"
                                                         Value="{x:Static local:HslComponent.Lightness}">
                                                            <Setter Property="TickFrequency"
                                                        Value=".01" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslComponentSelection}"
                                                         Value="{x:Static local:HslComponent.Value}">
                                                            <Setter Property="TickFrequency"
                                                        Value=".01" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Slider.Style>
                                        </Slider>
                                        <Grid Grid.Column="2"
                                  SnapsToDevicePixels="True"
                                  x:Name="PART_hslComponentAreaPanel" />
                                    </Grid>

                                    <Grid Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=Display3dVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                        <Border Margin="0,16,0,16" MaxHeight="350" x:Name="PART_hsl3dDisplayDecorator" Background="#00000000"/>
                                        <Border Margin="8" Background="{StaticResource Button.Static.Background1}" Height="24" Width="24" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="Help">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorModel, Mode=OneWay}" Value="{x:Static local:ColorModel.HSL}">
                                                            <Setter Property="ToolTip">
                                                                <Setter.Value>
                                                                    <StackPanel>
                                                                        <StackPanel.Resources>
                                                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource monospacedBoldText}">
                                                                                <Setter Property="Foreground" Value="Black"/>
                                                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                            </Style>
                                                                        </StackPanel.Resources>
                                                                        <TextBlock Text="Hue:        🖰 ↕"/>
                                                                        <TextBlock Text="Lightness:  🖰 ↔"/>
                                                                        <TextBlock Text="Saturation: 🖰 wheel"/>
                                                                    </StackPanel>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorModel, Mode=OneWay}" Value="{x:Static local:ColorModel.HSV}">
                                                            <Setter Property="ToolTip">
                                                                <Setter.Value>
                                                                    <StackPanel>
                                                                        <StackPanel.Resources>
                                                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource monospacedBoldText}">
                                                                                <Setter Property="Foreground" Value="Black"/>
                                                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                            </Style>
                                                                        </StackPanel.Resources>
                                                                        <TextBlock Text="Hue:        🖰 ↔"/>
                                                                        <TextBlock Text="Value:      🖰 ↕"/>
                                                                        <TextBlock Text="Saturation: 🖰 wheel"/>
                                                                    </StackPanel>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Text="?" FontSize="18"/>
                                        </Border>
                                    </Grid>

                                    <StackPanel Margin="0,8,0,0" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ComponentsVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                        <DockPanel Margin="0,0,0,4" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HexadecimalComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                            <TextBlock Text="Hex"
                                       Style="{StaticResource buttonText}"
                                       Margin="8,0,8,0" />
                                            <TextBox Height="24"
                                     BorderThickness="0"
                                     Foreground="#333"
                                     FontFamily="Consolas"
                                     FontWeight="DemiBold"
                                     FontSize="15"
                                     Padding="2,0,2,0"
                                     MaxLength="9"
                                     x:Name="PART_hexTextBox"
                                     VerticalContentAlignment="Center"
                                     Validation.ErrorTemplate="{StaticResource textBoxErrorTemplateAdornRight}">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="Margin"
                                                Value="0,0,8,0" />
                                                        <Style.Triggers>
                                                            <Trigger Property="Validation.HasError"
                                                     Value="True">
                                                                <Setter Property="Margin"
                                                        Value="0,0,40,0" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </DockPanel>

                                        <Grid Margin="0,0,0,0">
                                            <Grid.Resources>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="Width"
                                            Value="48" />
                                                    <Setter Property="BorderThickness"
                                            Value="0" />
                                                    <Setter Property="FontFamily"
                                            Value="Consolas" />
                                                    <Setter Property="FontSize"
                                            Value="15" />
                                                    <Setter Property="FontWeight"
                                            Value="DemiBold" />
                                                    <Setter Property="Foreground"
                                            Value="#333" />
                                                    <Setter Property="VerticalContentAlignment"
                                            Value="Center" />
                                                    <Setter Property="Margin"
                                            Value="0,4,8,4" />
                                                    <Setter Property="Validation.ErrorTemplate"
                                            Value="{StaticResource textBoxErrorTemplateAdornLeft}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError"
                                                 Value="True">
                                                            <Setter Property="Margin"
                                                    Value="32,4,8,4" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>

                                                <Style TargetType="{x:Type RepeatButton}"
                                       BasedOn="{StaticResource BaseButtonStyle}"
                                       x:Key="upChevronButton">
                                                    <!--<Setter Property="Delay"
                                            Value="0" />-->
                                                    <Setter Property="Interval"
                                            Value="1" />
                                                    <Style.Resources>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuText}">
                                                            <Setter Property="Margin"
                                                    Value="0,0,0,16" />
                                                            <Setter Property="VerticalAlignment"
                                                    Value="Center" />
                                                        </Style>
                                                    </Style.Resources>
                                                </Style>

                                                <Style TargetType="{x:Type RepeatButton}"
                                       BasedOn="{StaticResource BaseButtonStyle}"
                                       x:Key="downChevronButton">
                                                    <!--<Setter Property="Delay"
                                            Value="0" />-->
                                                    <Setter Property="Interval"
                                            Value="1" />
                                                    <Style.Resources>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuText}">
                                                            <Setter Property="Margin"
                                                    Value="0,-24,0,0" />
                                                            <Setter Property="VerticalAlignment"
                                                    Value="Center" />
                                                            <!--<Setter Property="Foreground"
                                                    Value="{StaticResource whiteColorBrush}" />-->
                                                        </Style>
                                                    </Style.Resources>
                                                </Style>

                                                <system:String x:Key="upChevron">🞁</system:String>
                                                <system:String x:Key="downChevron">🞃</system:String>

                                                <Style TargetType="{x:Type UniformGrid}"
                                       x:Key="chevronButtonsGrid">
                                                    <!-- Grid.Column="2" Rows="2" Columns="1" Width="24" Height="24" Margin="0,0,8,0"-->
                                                    <Setter Property="Grid.Column"
                                            Value="3" />
                                                    <Setter Property="UniformGrid.Rows"
                                            Value="2" />
                                                    <Setter Property="Columns"
                                            Value="1" />
                                                    <Setter Property="Width"
                                            Value="24" />
                                                    <Setter Property="Height"
                                            Value="24" />
                                                    <Setter Property="Margin"
                                            Value="0,0,8,0" />
                                                </Style>

                                            </Grid.Resources>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=AlphaComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="A" />
                                                <Border Grid.Column="1"
                                        Margin="5,4,13,4"
                                        BorderThickness="0"
                                        IsHitTestVisible="False"
                                        Background="{StaticResource checkeredBrush}" />
                                                <Slider Grid.Column="1"
                                        x:Name="PART_aRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_aTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_aIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_aDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>

                                            <Grid Grid.Row="1" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=RgbComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="R" />
                                                <Slider Grid.Column="1"
                                        x:Name="PART_rRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_rTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_rIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_rDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>

                                            <Grid Grid.Row="2" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=RgbComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="G" />
                                                <Slider Grid.Column="1"
                                        x:Name="PART_gRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_gTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_gIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_gDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>

                                            <Grid Grid.Row="3" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=RgbComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="B" />
                                                <Slider Grid.Column="1"
                                        x:Name="PART_bRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_bTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_bIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_bDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>

                                            <Grid Grid.Row="4" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslvComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="H" />
                                                <Slider Grid.Column="1"
                                        x:Name="PART_hRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_hTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_hIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_hDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>

                                            <Grid Grid.Row="5" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslvComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="S" />
                                                <Slider Grid.Column="1"
                                        TickFrequency=".01"
                                        x:Name="PART_sRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_sTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_sIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_sDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>

                                            <Grid Grid.Row="6" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslvComponentVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}"
                                               BasedOn="{StaticResource monospacedBoldText}">
                                                            <Setter Property="Text"
                                                    Value="{Binding Source={x:Static local:HslComponent.Lightness}, Converter={StaticResource hslComponentToAbbreviatedStringConverter} }" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorModel, Mode=OneWay}" Value="{x:Static local:ColorModel.HSV}">
                                                                    <Setter Property="Text"
                                                            Value="{Binding Source={x:Static local:HslComponent.Value}, Converter={StaticResource hslComponentToAbbreviatedStringConverter} }" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <Slider Grid.Column="1"
                                        TickFrequency=".01"
                                        x:Name="PART_vRangeBase" />
                                                <TextBox Grid.Column="2"
                                         MaxLength="3"
                                         x:Name="PART_vTextBox" />
                                                <UniformGrid Style="{StaticResource chevronButtonsGrid}">
                                                    <RepeatButton Style="{StaticResource upChevronButton}"
                                                  x:Name="PART_vIncrementButtonBase">
                                                        <TextBlock Text="{StaticResource upChevron}" />
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource downChevronButton}"
                                                  x:Name="PART_vDecrementButtonBase">
                                                        <TextBlock Text="{StaticResource downChevron}" />
                                                    </RepeatButton>
                                                </UniformGrid>
                                            </Grid>
                                        </Grid>
                                    </StackPanel>

                                    
                                    <Grid Margin="0,8,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <UniformGrid 
                                     Margin="4,0,0,0">
                                            <UniformGrid.Style>
                                                <Style TargetType="{x:Type UniformGrid}">
                                                    <Setter Property="Columns" Value="2"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorPreviewVisible, Mode=OneWay}" Value="False">
                                                            <Setter Property="Columns" Value="1"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=CustomColorsVisible, Mode=OneWay}" Value="False">
                                                            <Setter Property="Columns" Value="1"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </UniformGrid.Style>
                                            <Border BorderThickness="0"
                                                Height="32"
                                                SnapsToDevicePixels="True"
                                                Margin="4,0,4,0"
                                                Background="{StaticResource checkeredBrush}"
                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorPreviewVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <Button Style="{StaticResource ColorSelectorButtonStyle}"
                                                    x:Name="PART_selectCustomColorButtonBase"
                                                    Width="Auto"
                                                    IsTabStop="True" >
                                                    <Button.Resources>
                                                        <SolidColorBrush x:Key="BackgroundBrush"
                                                         Color="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=CurrentMediaColor, Mode=OneWay}" />
                                                    </Button.Resources>
                                                    <Button.Background>
                                                        <StaticResource ResourceKey="BackgroundBrush" />
                                                    </Button.Background>
                                                    <Button.Tag>
                                                        <CornerRadius>0</CornerRadius>
                                                    </Button.Tag>
                                                    <Button.ToolTip>
                                                        <TextBlock Foreground="Black" Text="{Binding Source={StaticResource BackgroundBrush}, Mode=OneWay, StringFormat='{}{0}'}" />
                                                    </Button.ToolTip>
                                                </Button>
                                            </Border>

                                            <Button Style="{StaticResource ButtonStyle1}"
                                                x:Name="PART_saveCustomColorButtonBase"
                                                Margin="4,0,4,0"
                                                IsTabStop="True"
                                                Height="32"
                                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=CustomColorsVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                                <TextBlock Text="Add +" TextWrapping="Wrap"
                                           TextAlignment="Center"
                                           Style="{StaticResource buttonText}" />
                                            </Button>
                                        </UniformGrid>
                                        <Button Background="{StaticResource redColorBrush}" 
                                                        Style="{StaticResource ButtonStyle1}" 
                                                    Margin="4,0,8,0"
                                                    Grid.Column="1" 
                                                        ToolTip="Delete Saved Colors"
                                                        x:Name="PART_deleteCustomColorsButtonBase">
                                            <TextBlock Text="🗑" FontWeight="Normal" />
                                        </Button>
                                    </Grid>


                                    <ListBox ItemsSource="{Binding Path=CustomColors, Mode=OneWay}"
                                         x:Name="PART_customColorsSelector"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                         Padding="0"
                                         BorderThickness="0"
                                         IsTabStop="False"
                                         KeyboardNavigation.TabNavigation="Continue"
                                         Margin="4,8,4,0"
                                         HorizontalAlignment="Stretch"
                                         HorizontalContentAlignment="Stretch"
                                         Background="Transparent"
                                         ItemTemplate="{StaticResource ColorListItemDataTemplateAnimated}"
                                         ItemContainerStyle="{StaticResource ColorSelectorListItemStyle}"
                                         ItemsPanel="{StaticResource ColorListItemPanelTemplate}" 
                                         Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=CustomColorsVisible, Mode=OneWay, Converter={StaticResource b2v}}">
                                    </ListBox>
                                </StackPanel>
                            </ScrollViewer>

                            <Border Grid.Row="1" Height="8" IsHitTestVisible="False" IsEnabled="False" VerticalAlignment="Top">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="Black" Offset="-1"/>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" >
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=IsMenuOpen, Mode=OneWay}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Visibility)" Duration="0:0:0.0">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Visibility)" Duration="0:0:0.3">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>

                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border Grid.ColumnSpan="2" IsHitTestVisible="True" IsEnabled="True" x:Name="PART_closeMenuDecorator">
                                <Border.BitmapEffect>
                                    <BlurBitmapEffect Radius="10" />
                                </Border.BitmapEffect>
                                <Border.Background>
                                    <VisualBrush Visual="{Binding ElementName=mainInterface, Mode=OneWay}" />
                                </Border.Background>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=IsMenuOpen, Mode=OneWay}" Value="true">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(Border.BitmapEffect).(BlurBitmapEffect.Radius)" From="0" To="10" Duration="0:0:0.3">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <SineEase EasingMode="EaseOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(Border.BitmapEffect).(BlurBitmapEffect.Radius)" To="0" Duration="0:0:0.3">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <SineEase EasingMode="EaseIn"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <Grid HorizontalAlignment="Left" x:Name="menuPanel">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=IsMenuOpen, Mode=OneWay}" Value="true">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" From="-200,0,0,0" To="0,0,0,0" Duration="0:0:0.3">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <SineEase EasingMode="EaseOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="-200,0,0,0" Duration="0:0:0.3">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <SineEase EasingMode="EaseIn"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Background="{TemplateBinding Background}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="1" Height="8" IsHitTestVisible="False" IsEnabled="False" VerticalAlignment="Top">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="Black" Offset="-1"/>
                                                    <GradientStop Offset="1" Color="#00000000"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Grid Background="#18ffffff">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button x:Name="PART_menuCloseButton" Style="{StaticResource ButtonStyle1}" 
                                                    Height="26" Width="41" ToolTip="Close Menu">
                                            <TextBlock Style="{StaticResource buttonText}" Text="≡" Foreground="White" FontSize="24" FontWeight="Normal" LineHeight="24" LineStackingStrategy="BlockLineHeight"/>
                                        </Button>
                                        <TextBlock 
                                                Grid.Column="1"
                                                Text="Menu"
                                           HorizontalAlignment="Center"
                                           Margin="8,4"
                                           Style="{StaticResource MenuSectionHeader}"
                                           Foreground="{TemplateBinding Foreground}" />
                                        <Button x:Name="PART_helpOpenButton" Style="{StaticResource ButtonStyle1}" 
                                                    Height="26" Width="41"  ToolTip="https://github.com/DivideByZeno/Zeno-Color-Selector" Grid.Column="2">
                                            <TextBlock Text="?" FontWeight="Bold" FontSize="18" Style="{StaticResource buttonText}"/>
                                        </Button>
                                    </Grid>
                                    <ScrollViewer Grid.Row="1"
                                HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                        <StackPanel>
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MenuSettingToggleButton}">
                                                    <Setter Property="Grid.Column" Value="1"/>
                                                    <Setter Property="Margin" Value="8,4,8,4"/>
                                                    <!--<Setter Property="Height" Value="24"/>-->
                                                </Style>
                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource SettingLabelText}">
                                                    <Setter Property="Margin" Value="8,0,0,0"/>
                                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="Width" Value="104"/>
                                                </Style>

                                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource gridItemContrast}" />
                                                <Style TargetType="{x:Type WrapPanel}">
                                                    <Setter Property="Margin" Value="0,4,0,4" />
                                                </Style>
                                            </StackPanel.Resources>
                                            <Expander Style="{StaticResource ExpanderStyle1}" IsExpanded="False">
                                                <Expander.Header>
                                                    <Grid Style="{StaticResource menuItemGrid}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Style="{StaticResource MenuSectionHeader}">
                                                            <Run Text="🎛️ " FontWeight="Normal" FontSize="16" BaselineAlignment="Center"/><Run Text="App Options"/>
                                                        </TextBlock>
                                                        <TextBlock Grid.Column="1">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuSectionHeaderExpanderText}">
                                                                    <Setter Property="Text"
                                                                                Value=" +" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=IsExpanded, Mode=OneWay}" Value="True">
                                                                            <Setter Property="Text"
                                                                                        Value=" −" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>
                                                </Expander.Header>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="1" />
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="Scale" Grid.Column="0" Width="Auto" />
                                                        <WrapPanel Grid.Column="1" Margin="8">
                                                            <Button Style="{StaticResource ButtonStyle1}" Margin="0,0,8,0" ToolTip="Reset Scale" 
                                                                    x:Name="PART_resetAppScaleButtonBase">
                                                                <TextBlock Text="Reset" Style="{StaticResource buttonText}" Padding="8,0"/>
                                                            </Button>
                                                            <WrapPanel>

                                                                <Button Style="{StaticResource ButtonStyle1}" Grid.Column="1" ToolTip="Decrease Scale" Background="{StaticResource redColorBrush}" MinWidth="32"
                                                                    x:Name="PART_decreaseAppScaleButtonBase">
                                                                    <TextBlock Text="-" Style="{StaticResource buttonTextIcon}" TextBlock.LineHeight="24" TextBlock.LineStackingStrategy="BlockLineHeight"/>
                                                                </Button>
                                                                <Button Style="{StaticResource ButtonStyle1}" Grid.Column="2" ToolTip="Increase Scale" Background="{StaticResource greenColorBrush}" MinWidth="32"
                                                                    x:Name="PART_increaseAppScaleButtonBase">
                                                                    <TextBlock Text="+" Style="{StaticResource buttonTextIcon}" TextBlock.LineHeight="24"  TextBlock.LineStackingStrategy="BlockLineHeight"/>
                                                                </Button>
                                                            </WrapPanel>
                                                        </WrapPanel>
                                                    </Grid>
                                                    <WrapPanel Grid.Row="1">
                                                        <TextBlock Text="Orientation" />
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HexadecimalComponentVisible, Mode=OneWay}"/>
                                                    </WrapPanel>
                                                </Grid>
                                            </Expander>
                                            
                                            <Expander Style="{StaticResource ExpanderStyle1}" IsExpanded="False">
                                                <Expander.Header>
                                                    <Grid Style="{StaticResource menuItemGrid}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Style="{StaticResource MenuSectionHeader}">
                                                            <Run Text="🖳 " FontWeight="Normal" FontSize="24" BaselineAlignment="Center"/><Run Text="Import Options"/>
                                                        </TextBlock>
                                                        <TextBlock Grid.Column="1">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuSectionHeaderExpanderText}">
                                                                    <Setter Property="Text"
                                                                                Value=" +" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=IsExpanded, Mode=OneWay}" Value="True">
                                                                            <Setter Property="Text"
                                                                                        Value=" −" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>
                                                </Expander.Header>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="1" />

                                                    <Button Style="{StaticResource ButtonStyle1}" Margin="8,8,8,0" Padding="8" Height="Auto" x:Name="PART_importPresetColorsButtonBase">
                                                        <TextBlock Text="Presets from .JSON ..." Style="{StaticResource buttonText}" TextWrapping="Wrap"/>
                                                    </Button>
                                                    <Button Style="{StaticResource ButtonStyle1}" Margin="8" Padding="8" Height="Auto" Grid.Row="1" x:Name="PART_importCustomColorsButtonBase">
                                                        <TextBlock Text="Custom from .JSON ..." Style="{StaticResource buttonText}" TextWrapping="Wrap"/>
                                                    </Button>
                                                </Grid>
                                            </Expander>
                                            <Expander Style="{StaticResource ExpanderStyle1}" IsExpanded="False">
                                                <Expander.Header>
                                                    <Grid Style="{StaticResource menuItemGrid}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Style="{StaticResource MenuSectionHeader}">
                                                            <Run Text="🖫 " FontWeight="Normal" FontSize="24" BaselineAlignment="Center"/><Run Text="Export Options"/>
                                                        </TextBlock>
                                                        <TextBlock Grid.Column="1">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuSectionHeaderExpanderText}">
                                                                    <Setter Property="Text"
                                                                                Value=" +" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=IsExpanded, Mode=OneWay}" Value="True">
                                                                            <Setter Property="Text"
                                                                                        Value=" −" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>
                                                </Expander.Header>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <!--<Border Grid.Row="1" />

                                                    <Button Style="{StaticResource ButtonStyle1}" Margin="8" Padding="8" Height="Auto">
                                                        <TextBlock Text="Presets from File..." Style="{StaticResource buttonText}" TextWrapping="Wrap"/>
                                                    </Button>-->
                                                    <Button x:Name="PART_exportCustomColorsButtonBase" Style="{StaticResource ButtonStyle1}" Margin="8" Padding="8" Height="Auto" Grid.Row="1">
                                                        <TextBlock Text="Custom to .JSON ..." Style="{StaticResource buttonText}" TextWrapping="Wrap"/>
                                                    </Button>
                                                </Grid>
                                            </Expander>
                                            <Expander Style="{StaticResource ExpanderStyle1}" IsExpanded="False" >
                                                <Expander.Header>
                                                    <Grid Style="{StaticResource menuItemGrid}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Style="{StaticResource MenuSectionHeader}">
                                                            <Run Text="👁 " FontWeight="Normal"/><Run Text="Visible Controls"/> 
                                                        </TextBlock>
                                                        <TextBlock Grid.Column="1">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuSectionHeaderExpanderText}">
                                                                    <Setter Property="Text"
                                                                                Value=" +" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=IsExpanded, Mode=OneWay}" Value="True">
                                                                            <Setter Property="Text"
                                                                                        Value=" −" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>
                                                </Expander.Header>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="1" />
                                                    <Border Grid.Row="3" />
                                                    <Border Grid.Row="5" />
                                                    <WrapPanel>
                                                        <TextBlock Text="Color Models" />
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorModelsVisible, Mode=OneWay}" x:Name="PART_colorModelsVisibilityToggleButton"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="1">
                                                        <TextBlock Text="Preset Colors"/>
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=PresetColorsVisible, Mode=OneWay}" x:Name="PART_presetColorsVisibilityToggleButton"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="2">
                                                        <TextBlock Text="2D Display"/>
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=Display2dVisible, Mode=OneWay}" x:Name="PART_display2dVisibilityToggleButton" />
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="3">
                                                        <TextBlock Text="3D Display"/>
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=Display3dVisible, Mode=OneWay}" x:Name="PART_display3dVisibilityToggleButton"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="4">
                                                        <TextBlock Text="Components"/>
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ComponentsVisible, Mode=OneWay}" x:Name="PART_componentsVisibilityToggleButton"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="5">
                                                        <TextBlock Text="Color Preview"/>
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=ColorPreviewVisible, Mode=OneWay}" x:Name="PART_colorPreviewVisibilityToggleButton"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="6">
                                                        <TextBlock Text="Custom Colors"/>
                                                        <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=CustomColorsVisible, Mode=OneWay}" x:Name="PART_customColorsVisibilityToggleButton"/>
                                                    </WrapPanel>
                                                </Grid>
                                            </Expander>

                                            <Expander Style="{StaticResource ExpanderStyle1}" IsExpanded="False">
                                                <Expander.Header>
                                                    <Grid Style="{StaticResource menuItemGrid}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Style="{StaticResource MenuSectionHeader}">
                                                            <Run Text="🎚 " FontWeight="Normal"/><Run Text="Component Editors"/> 
                                                        </TextBlock>
                                                        <TextBlock Grid.Column="1">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MenuSectionHeaderExpanderText}">
                                                                    <Setter Property="Text"
                                                                                Value=" +" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=IsExpanded, Mode=OneWay}" Value="True">
                                                                            <Setter Property="Text"
                                                                                        Value=" −" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </Grid>
                                                </Expander.Header>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="1" />
                                                    <Border Grid.Row="3" />
                                                    <WrapPanel>
                                                        <TextBlock Text="Hexadecimal" />
                                                        <ToggleButton x:Name="PART_hexadecimalComponentVisibilityToggleButton" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HexadecimalComponentVisible, Mode=OneWay}"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="1">
                                                        <TextBlock Text="Alpha Channel"/>
                                                        <ToggleButton x:Name="PART_alphaComponentVisibilityToggleButton" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=AlphaComponentVisible, Mode=OneWay}"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="2">
                                                        <TextBlock Text="RGB  Channels"/>
                                                        <ToggleButton x:Name="PART_rgbComponentVisibilityToggleButton" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=RgbComponentVisible, Mode=OneWay}"/>
                                                    </WrapPanel>
                                                    <WrapPanel Grid.Row="3">
                                                        <TextBlock Text="HSLV Channels"/>
                                                        <ToggleButton x:Name="PART_hslvComponentVisibilityToggleButton" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ColorSelector}}, Path=HslvComponentVisible, Mode=OneWay}"/>
                                                    </WrapPanel>
                                                </Grid>
                                            </Expander>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>


                                <Border Grid.RowSpan="2" Grid.Column="1" Width="32" IsHitTestVisible="False" IsEnabled="False" HorizontalAlignment="Left">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="Black" Offset="-.5"/>
                                                <GradientStop Offset="1" Color="#00000000"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Grid>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
